@model MvcCheckBoxListSampleApp.ViewModels.CitiesViewModel
@{
  ViewBag.Title = "Experimental";
}

@if (Model.WasPosted) {
	<div class="notice success clearfix">
    <div class="content_left margin_top13">
      <span class="icon medium" data-icon="C"></span>
    </div>
    <div class="content_left">
      <h4>
		    @if (Model.PostedCities.CityIDs != null) {
			    @string.Join(", ", Model.SelectedCities.Select(x => x.Name))
          @:- received by controller!
		    }
      </h4>
    </div>
	</div>
}

<div class="col_12">
  <h3>@ViewBag.Title (testing new features)</h3>
  
  <section>
	  <div class="title">General playground</div>
	  <p>
      <label>Output:</label>
	    @using (Html.BeginForm("Test", "Home", FormMethod.Get)) {
		    
        
        
		    <p><input class="green" type="submit" value="POST to controller" /></p>
	    }
	  </p>
  </section>
  

  <section>
	  <div class="title">Select item by boolean value from Model list - Test 2</div>
	  <p>
      <label>Output:</label>
	    @using (Html.BeginForm("Test", "Home", FormMethod.Get)) {
		    @Html.CheckBoxListFor(x => x.PostedCities.CityIDs,
													    x => x.AvailableCities,
													    x => x.Id,
													    x => x.Name,
													    x => Model.SelectedCities.Any(s => x.Id == s.Id),
							                null, null,
													    new[] {"3", "5", "7"},
							                x => x.Tags)

		    <p><input class="green" type="submit" value="POST to controller" /></p>
	    }
	  </p>
  </section>  
  

  <section>
	  <div class="title">Select item by boolean value from database - Test 1</div>
	  <p>
      <label>Output:</label>
	    @using (Html.BeginForm("Test", "Home", FormMethod.Get)) {
        @Html.CheckBoxListFor(model => model.PostedCities.CityIDs,
													    model => model.AvailableCities,
													    city => city.Id,
													    city => city.Name,
													    city => city.IsSelected,
							                null, null,
													    new[] {"3", "5", "7"},
							                city => city.Tags)

		    <p><input class="green" type="submit" value="POST to controller" /></p>
	    }
	  </p>
  </section>

  <section>
	  <div class="title">Full Example (with DisplayTemplate)</div>
	  <p>
      <label>Output:</label>
	    @using (Html.BeginForm("Test", "Home", FormMethod.Get)) {
        var htmlListInfo = new HtmlListInfo
          (HtmlTag.vertical_columns, 2, null, TextLayout.Default, true);
     
		    @Html.CheckBoxListFor(model => model.PostedCities.CityIDs,
													    model => model.AvailableCities,
													    city => city.Id,
													    city => city.Name,
													    model => model.SelectedCities,
							                null,
													    htmlListInfo,
													    new[] {"3", "5", "7"},
							                city => city.Tags)

		    <p><input class="green" type="submit" value="POST to controller" /></p>
	    }
	  </p>	
    <p>
      <label>How-To:</label>
    </p>
    <p>
      First you need to create <strong>Views\Shared\DisplayTemplates\City.cshtml</strong>
      file to hold a template for our base class <code>City</code>.
      It must have same name as class <code>City</code> for which it templates,
      and must have a <code>&#64;model</code> set to use <code>City</code>
      (including applicable namespace).
    </p>
    <p>
      <label>City.cshtml file used here:</label>
<pre>
&#64;model MvcCheckBoxListSampleApp.Model.City

&lt;strong&gt;&#64;Model.Name&lt;/strong&gt; - test display template
</pre>
    </p>
  </section>
  
</div>

@section Scripts {
  <script type="text/javascript">
    $(document).ready(function () {
      $('[what="smallCity"]').css("color", "blue");
      $('[what="bigCity"]').css("color", "green");
    });
  </script>  
}